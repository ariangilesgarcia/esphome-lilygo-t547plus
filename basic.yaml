esphome:
  name: lilygo
  platformio_options:
    # Unless noted otherwise, based on https://github.com/Xinyuan-LilyGO/LilyGo-EPD47/blob/1eb6119fc31fcff7a6bafecb09f4225313859fc5/examples/demo/platformio.ini#L37
    upload_speed: 921600
    monitor_speed: 115200
    board_build.mcu: esp32s3
    board_build.f_cpu: 240000000L
    board_build.arduino.memory_type: qspi_opi
    board_build.flash_size: 16MB
    board_build.flash_mode: qio
    board_build.flash_type: qspi
    board_build.psram_type: opi
    board_build.memory_type: qspi_opi
    board_build.boot_freq: 80m
    platform_packages:
      - "toolchain-riscv32-esp @8.4.0+2021r2-patch5"
    build_flags:  # the first three defines are required for the screen library to function.
      - "-DBOARD_HAS_PSRAM"
      - "-DARDUINO_RUNNING_CORE=0"  # TODO: this conflicts with the value from platformio's idedata, spewing a lot of warnings during the build.
      - "-DARDUINO_EVENT_RUNNING_CORE=0"  # and this too
      # In addition to lilygo's settings:
      # To enable reading logs over USB until `hardware_uart: USB_CDC` support
      # is added to `logger:`, as detailed in <https://github.com/esphome/feature-requests/issues/1906>:
      - "-DARDUINO_USB_MODE=1"
      - "-DARDUINO_USB_CDC_ON_BOOT=1"

esp32:
  variant: esp32s3
  board: esp32-s3-devkitc-1

  framework:
    type: arduino
    # Just like in <https://community.home-assistant.io/t/enable-usb-cdc-to-log-hello-world-to-esp32-s3-dev-board-for-esphome/463164/10>
    # I had problems with newer versions; the following combination happens to work, so using it for now.
    version: 2.0.3
    platform_version: 5.1.1

logger:
  level: VERBOSE
  # hardware_uart: USB_CDC  # see note about <https://github.com/esphome/feature-requests/issues/1906> above

# Enable Home Assistant API
api:
  password: !secret api_ota_password
ota:
  platform: esphome
  password: !secret api_ota_password
wifi: !include wifi-secrets.yaml

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO21 #was GPIO39 on the previous board
      inverted: true
    name: "Button 1"
    on_press:
      - logger.log: PhysButton Pressed

external_components:
  source:
    type: local
    path: components/
  components: ["t547"]

font:
  - id: roboto
    file: "gfonts://Roboto"
    size: 50

  - id: roboto_large
    file: "gfonts://Roboto"
    size: 90

  - id: roboto_small
    file: "gfonts://Roboto"
    size: 34

  - id: roboto_vsmall
    file: "gfonts://Roboto"
    size: 20

  - id: material_trams
    file: "gfonts://Material+Icons"
    size: 50
    glyphs:
      - "\U0000E571" #tram
      - "\U0000E089" #arrow right
      - "\U0000E8DF" #calendar

  - id: material_large
    file: "gfonts://Material+Icons"
    size: 100
    glyphs:
      - "\U0000E8B5" #clock

time:
  - platform: sntp
    id: ntp

image:
  - file: "images/book.png"
    id: book_icon
    resize: 100x100
  - file: "images/caca.jpg"
    id: caca_icon
    resize: 300x300

display:
  - platform: t547
    rotation: 270
    update_interval: 60s
    lambda: |-
      // Setup
      it.fill(COLOR_OFF);
      delay(10000);

      // Time & Date
      it.printf(270, 17, id(roboto_large), COLOR_ON, TextAlign::TOP_CENTER, id(ntp).now().strftime("%H:%M").c_str());
      it.printf(270, 120, id(roboto), COLOR_ON, TextAlign::TOP_CENTER, id(ntp).now().strftime("%Y-%m-%d").c_str());

      // Separator
      it.filled_rectangle(0, 230, it.get_width(), 4, COLOR_ON);

      // Book
      it.image(220, 270, id(book_icon));
      it.printf(270, 350, id(roboto), COLOR_ON, TextAlign::TOP_CENTER, "Lolita");
      it.printf(270, 425, id(roboto_small), COLOR_ON, TextAlign::TOP_CENTER, "Vladimir Nabokov");

      // Separator
      it.filled_rectangle(0, 520, it.get_width(), 4, COLOR_ON);

      // Caca
      it.image(120, 600, id(caca_icon));